import{Chess}from"chess";const container=document.getElementById("container"),startAnimation=document.getElementById("startAnimation"),startContainer=document.getElementById("startContainer"),chessBoard=document.getElementById("chessBoard"),chatGptLogo=document.getElementById("chatGptLogo"),redLogo=document.getElementById("redLogo"),playButton=document.getElementById("play-button"),audioElement=document.getElementById("audio-element"),blockSize=55,animationSpeed=.5;let blocks=[];function createBlock(e,t){const o=document.createElement("div");return o.classList.add("block"),o.style.left=55*e+"px",o.style.top=55*t+"px",container.appendChild(o),o}function sleep(e){return new Promise((t=>setTimeout(t,e)))}async function animate(){let e=0,t=0,o=1,n=0;const a=Math.ceil(window.innerWidth/55),s=Math.ceil(window.innerHeight/55);for(let r=0;r<a*s;r++){if(blocks.push(createBlock(e,t)),e+o>=a||e+o<0||t+n>=s||t+n<0||blocks.some((a=>a.style.left===55*(e+o)+"px"&&a.style.top===55*(t+n)+"px"))){const e=o;o=-n,n=e}e+=o,t+=n,await sleep(.5)}}function gentlyLowerVolume(e,t,o,n){const a=50*(t-o)/n;e.volume=t;const s=setInterval((()=>{e.volume-=a,e.volume=Math.max(Math.min(e.volume,1),0),e.volume<=o&&(e.volume=o,clearInterval(s))}),50)}startAnimation.addEventListener("click",(async()=>{for(let e=0;e<10;e++)setTimeout((()=>{startAnimation.classList.toggle("d-none")}),150*e);audioElement.play(),setTimeout((async()=>{startAnimation.classList.add("d-none"),startContainer.classList.add("d-none"),container.classList.remove("d-none"),await animate(),container.innerHTML="",container.classList.add("d-none"),chessBoard.classList.remove("hidden"),chessBoard.classList.remove("d-none"),chessBoard.classList.remove("visible"),gentlyLowerVolume(audioElement,1,.02,1e4),setTimeout((()=>{chatGptLogo.classList.remove("d-none"),redLogo.classList.remove("d-none"),setTimeout((()=>{chatGptLogo.style.left="80%",redLogo.style.left="10%"}),800)}),50)}),1500)}));import{Chess}from"chess";try{console.log("Chessboard.js version:",Chessboard.version);var board=null,game=new Chess,$status=$("#status"),$fen=$("#fen"),$pgn=$("#pgn");function onDragStart(e,t,o,n){return console.log("onDragStart called"),!game.game_over()&&(!("w"===game.turn()&&-1!==t.search(/^b/)||"b"===game.turn()&&-1!==t.search(/^w/))&&void 0)}function onDrop(e,t){console.log("onDrop called"),alert("This never shows?");var o=game.move({from:e,to:t,promotion:"q"});if(alert("This never shows?"),null===o)return"snapback";board.position(game.fen()),console.log("This never shows?"),$.get("/ai-move",{fen:game.fen()},(function(e){null!==game.move(e)?(board.position(game.fen()),updateStatus()):console.error("Received invalid move from server:",e)}))}function onSnapEnd(){console.log("onSnapEnd called"),board.position(game.fen())}function updateStatus(){var e="",t="White";"b"===game.turn()&&(t="Black"),game.in_checkmate()?e="Game over, "+t+" is in checkmate.":game.in_draw()?e="Game over, drawn position":(e=t+" to move",game.in_check()&&(e+=", "+t+" is in check")),$status.html(e),$fen.html(game.fen()),$pgn.html(game.pgn())}var config={draggable:!0,position:"start",onDragStart:onDragStart,onDrop:onDrop,onSnapEnd:onSnapEnd};board=Chessboard("myBoard",config),updateStatus()}catch(e){console.log(e)}